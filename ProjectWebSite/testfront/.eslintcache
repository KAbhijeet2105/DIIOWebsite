[{"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/index.js":"1","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/App.js":"2","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/Routes.js":"3","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Home.js":"4","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/backend.js":"5","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Base.js":"6","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Menu.js":"7","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/views/Dashboard.js":"8","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/variables/charts.js":"9","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/NavBar.js":"10","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signup.js":"11","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signin.js":"12","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/UserDashBoard.js":"13","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/AdminDashBoard.js":"14","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/auth/helper/index.js":"15"},{"size":210,"mtime":1610514644256,"results":"16","hashOfConfig":"17"},{"size":528,"mtime":1610345318168,"results":"18","hashOfConfig":"19"},{"size":1268,"mtime":1614063896829,"results":"20","hashOfConfig":"17"},{"size":670,"mtime":1614234602498,"results":"21","hashOfConfig":"17"},{"size":50,"mtime":1581794767000,"results":"22","hashOfConfig":"17"},{"size":378,"mtime":1610466395619,"results":"23","hashOfConfig":"17"},{"size":1869,"mtime":1610599876590,"results":"24","hashOfConfig":"17"},{"size":17822,"mtime":1610466614892,"results":"25","hashOfConfig":"17"},{"size":10910,"mtime":1607696334000,"results":"26","hashOfConfig":"17"},{"size":2497,"mtime":1614229831562,"results":"27","hashOfConfig":"17"},{"size":4832,"mtime":1614153072366,"results":"28","hashOfConfig":"17"},{"size":4245,"mtime":1614153055602,"results":"29","hashOfConfig":"17"},{"size":489,"mtime":1613914752259,"results":"30","hashOfConfig":"17"},{"size":492,"mtime":1613914797448,"results":"31","hashOfConfig":"17"},{"size":1628,"mtime":1611331453149,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"58anjr",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eb6vlm",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/index.js",[],["72","73"],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/App.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/Routes.js",["74"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Base from \"./core/Base\";\nimport Home from \"./core/Home\";\nimport Dashboard from \"../src/views/Dashboard\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport UserDashBoard from \"./user/UserDashBoard\";\nimport AdminDashBoard from \"./user/AdminDashBoard\";\n\n\n\n//import Dashboard from \"../views/Dashboard.js\";\n// import Icons from \"views/Icons.js\";\n// import Map from \"views/Map.js\";\n// import Notifications from \"views/Notifications.js\";\n// import Rtl from \"views/Rtl.js\";\n// import TableList from \"views/TableList.js\";\n// import Typography from \"views/Typography.js\";\n// import UserProfile from \"views/UserProfile.js\";\n\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/base\" exact component={Base} />\n        <Route path=\"/user/signup\" exact component={Signup} />\n        <Route path=\"/user/signin\" exact component={Signin} />\n        <Route path=\"/admin/dashboard\" exact component={AdminDashBoard} />\n        <Route path=\"/user/dashboard\" exact component={UserDashBoard} />\n        \n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Home.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/backend.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Base.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Menu.js",["75"],"import React from \"react\";\nimport { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\n\nconst currentTab = (history, path) => {\n  if (history.location.pathname === path) {\n    return { color: \"#12B0E8\" };\n  } else {\n    return { color: \"#FFFFFF\" };\n  }\n};\n\nconst Menu = ({ history }) => (\n  <div>\n    <ul className=\"nav nav-tabs bg-dark\">\n      <li className=\"nav-item\">\n        <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\n          Home\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/base\")}\n          className=\"nav-link\"\n          to=\"/base\"\n        >\n          Base\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/user/dashboard\")}\n          className=\"nav-link\"\n          to=\"/user/dashboard\"\n        >\n          Dashboard\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/admin/dashboard\")}\n          className=\"nav-link\"\n          to=\"/admin/dashboard\"\n        >\n          A. Dashboard\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signup\")}\n          className=\"nav-link\"\n          to=\"/signup\"\n        >\n          Signup\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signin\")}\n          className=\"nav-link\"\n          to=\"/signin\"\n        >\n          Sign In\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signout\")}\n          className=\"nav-link\"\n          to=\"/signout\"\n        >\n          Signout\n        </Link>\n      </li>\n    </ul>\n  </div>\n);\n\n//new try.................\n\n\nexport default withRouter(Menu);\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/views/Dashboard.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/variables/charts.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/NavBar.js",["76","77","78","79","80","81","82"],"import React from \"react\";\nimport { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { signout, isAuthenticated } from \"../auth/helper\";\n\nexport class NavBar extends Component{\n\n    componentDidMount(){\n      \n     document.addEventListener('DOMContentLoaded', function() {\n       var elems = document.querySelectorAll('.sidenav');\n       var instances = M.Sidenav.init(elems, {});\n     });\n    }\n    render(){\n      return(\n     <div>\n      <nav>\n       <div class=\"nav-wrapper blue\">\n       <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger show-on-large\"><i class=\"material-icons\">menu</i></a>\n   \n         <div class=\"container\">\n         <a href=\"#\" class=\"brand-logo\">Logo</a>\n         <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n           {/* <li><a href=\"sass.html\">Sass</a></li>\n           <li><a href=\"badges.html\">Components</a></li>\n           <li><a href=\"collapsible.html\">JavaScript</a></li> */}\n         </ul>\n         </div>\n       </div>\n     </nav>\n     \n     <ul id=\"slide-out\" class=\"sidenav\">\n       <li><div class=\"user-view\">\n         <div class=\"background\">\n           {/* <img src=\"images/office.jpg\"/> */}\n         </div>\n         {/* <a href=\"#user\"><img class=\"circle\" src=\"images/yuna.jpg\"/></a>\n         <a href=\"#name\"><span class=\"white-text name\">User name here.</span></a>\n         <a href=\"#email\"><span class=\"white-text email\">useremail@gmail.com</span></a> */}\n       </div></li>\n       {/* <li><a href=\"#!\"><i class=\"material-icons\">cloud</i>First Link With Icon</a></li> */}\n       <li><a href=\"/\">Home</a></li>\n       <li><div class=\"divider\"></div></li>\n       {/* <li><a class=\"subheader\">Subheader</a></li> */}\n       {/* <li><a class=\"waves-effect\" href=\"#!\">Third Link With Waves</a></li> */}\n       <li><a href=\"/admin/dashboard\">Admin Dashboard</a></li>\n       <li><a href=\"/user/dashboard\">User Dashboard</a></li>\n       <li><a href=\"#\">Create Digital NoteCard</a></li>\n       <li><a href=\"#\">View Digital NoteCard</a></li>\n\n      {/* signout here  */}\n        {isAuthenticated() && (\n           <li class=\"logout_op\">\n             <a href=\"/\">\n             <span\n             className = \"text-warning\"\n              onClick = {() => {\n                signout(()=>{})\n              }}\n             >\n              Signout\n             </span>\n             </a>\n           </li>\n        )\n        } </ul> </div>); \n      };\n};\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signup.js",["83"],"import React, { useState }from \"react\";\nimport \"../styles.css\";\nimport {Link} from \"react-router-dom\";\nimport { event } from \"jquery\";\nimport { signup } from \"../auth/helper\";\nimport { NavBar } from \"../core/NavBar\";\n\n\n\nconst Signup = () => \n{\n  const [values,setValues] = useState({\n\n   user_name:\"\",\n   email:\"\",\n   password:\"\",\n   role:\"admin\",\n   service:\"profile\",\n   verified:false,\n   error:\"\",\n   success: false\n  });\n\n  const {user_name,email,password,role,service,verified,error,success} = values;\n\n  const handleChanges = user_name => event => {\n      setValues({...values,error:false,[user_name]:event.target.value});\n  };\n\n  const onSubmit = event =>  {\n\n    event.preventDefault()\n    setValues({...values, error:false})\n    signup({user_name,email,password,role,service,verified})\n    .then(data => {\n      if(data.error){\n        setValues({...values,error:data.error,success:false});\n      }\n      else{\n         setValues({...values,\n          user_name:\"\",\n          email:\"\",\n          password:\"\",\n          role:\"admin\",\n          service:\"profile\",\n          verified:false,\n          error:\"\",\n          success: true\n        \n        });\n\n      }\n    })\n    .catch(console.log(\"Error in signup!!!\"))\n\n  }\n\n\n //popup messsage\n\n const successMessage = () => {\n    return(\n      <div className=\"row\">\n      <div className=\"col-md-6 offset-sm-3 text-left\">\n  <div className = \"alert alert-success\"\n    style={{display:success ? \"\": \"none\"}}>\n\n      New account created successfully!! <Link to=\"/user/Signin\"> Please login here </Link> !!\n    </div>\n    </div>\n    </div>);\n\n };\n\n\n const errorMessage = () => {\n  return(\n    <div className=\"row\">\n   <div className=\"col-md-6 offset-sm-3 text-left\">\n  <div className = \"alert alert-danger\"\n    style={{display:error ? \"\": \"none\"}}>\n       {error} !!\n    </div>\n    \n    </div>\n    </div>\n    );\n\n };\n\n\n\nreturn(\n\n    <div>\n         <NavBar />\n\n      <div className=\"container\">\n        <div className=\"jumbotron bg-white text-dark text-center\">\n          <h2 className=\"display-4\">Signup Page</h2>\n          <p className=\"lead\">user registration here</p>\n          \n         <div class=\"container\">\n\n          {/* here is form code */}\n\n          <div class=\"row\">\n    <form class=\"col s12\">\n      <div class=\"row\">\n        <div class=\"input-field blue-text col s6\">\n          <input \n             value={user_name}\n          onChange={handleChanges(\"user_name\")}\n          id=\"name\" type=\"text\" class=\"validate blue-accent\"/>\n          <label for=\"name\" class=\"blue-text \">Name</label>\n        </div>\n       \n      </div>\n      \n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input\n              value={email}\n              onChange={handleChanges(\"email\")}\n          id=\"email\" type=\"email\" class=\"validate\"/>\n          <label for=\"email\" class=\"blue-text \">Email</label>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input id=\"password\" \n            onChange={handleChanges(\"password\")}\n            value={password}\n          type=\"password\" class=\"validate\"/>\n          <label for=\"password\" class=\"blue-text\">Password</label>\n        </div>\n      </div>\n      \n      <div class=\"row\">\n        <div class=\"col s12\">\n        <p class=\"blue-text\">Please choose your service:</p>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col s12\">\n        <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n\n      <label className=\"btn  btn-primary \">\n        <input name=\"service\" type=\"radio\" id=\"card\" autocomplete=\"off\" />\n        Digital NoteCard\n      </label>\n      &emsp;\n  \n      <label className=\"btn btn-primary \">\n        <input name=\"service\" type=\"radio\" id=\"profile\" autocomplete=\"off\"/>\n        Digital Profile\n      </label>\n\n      {/* \n       for disable the choice disable radio btn\n      <label className=\"btn  btn-primary \">\n        <input name=\"service\" type=\"radio\" id=\"card\" autocomplete=\"off\" disabled=\"disabled\"/>\n        Digital NoteCard\n      </label> */}\n\n\n      {/* <label>\n        <input class=\"with-gap text-blue\" name=\"group1\" type=\"radio\" color=\"blue\" />\n        <span>Digital Profile</span>\n      </label> */}\n\n      </div>\n\n        </div>\n      </div>\n\n      {successMessage()}\n      {errorMessage()}\n\n         <div class=\"row\">\n          <div class=\"col s12\">\n           <button onClick={onSubmit} class=\"btn blue waves-effect waves-light btn-large\" type=\"submit\" name=\"action\">Register\n           <i class=\"material-icons right\">send</i>\n            </button>\n          \n        </div>\n      </div>\n      <p className=\"text-black text-center\">{JSON.stringify(values)}</p>\n\n    </form>\n  </div>\n\n         </div>\n        \n        </div >\n       \n      </div>\n     \n    </div>\n  )};\n  export default Signup;","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signin.js",["84","85","86","87","88"],"import React, { useState }from \"react\";\nimport \"../styles.css\";\nimport {Link, Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\nimport { data } from \"jquery\";\nimport { NavBar } from \"../core/NavBar\";\n\n\n\nconst Signin = () => {\n\n\n    const [values,setValues] = useState({\n  \n      user_name:\"\",\n      email:\"\",\n      password:\"\",\n      role:\"admin\",\n      service:\"profile\",\n      verified:false,\n      error:\"\",\n      loading:false,\n      didRedirect :  false,\n      success: false\n     });\n   \n     const {user_name,email,password,role,service,verified,error, loading,didRedirect,success} = values;\n  \n       const { user } = isAuthenticated();\n  \n       const handleChanges = user_name => event => {\n        setValues({...values,error:false,[user_name]:event.target.value});\n    };\n  \n    const onSubmit = event => {\n     event.preventDefault();\n     setValues({...values, error:false})\n\n     signin({email,password})\n     .then(data => {\n          if(data.error){\n            setValues({...values, error: data.error, loading: false})\n          }\n          else{\n            authenticate(data,() => {\n              setValues({\n                ...values,\n                didRedirect:true,\n              });\n            });\n            performRedirect();\n            //TODO:perform redirect and test it!\n          }\n          //redirecting code new add test...\n\n     })\n     .catch(console.log(\"signin request failed!!\"))\n\n    };\n  \n\n     var performRedirect = () => {\n      if( didRedirect){\n        if(user && user.role === \"admin\" ){\n            // return<p>ridrect to admin dashboard</p>\n\n            return(\n              <div className=\"row\">\n              <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div className = \"alert alert-success\"\n            style={{display:success ? \"\": \"none\"}}>\n        \n              New account created successfully!! <Link to=\"/user/Signin\"> Please login here </Link> !!\n            </div>\n            </div>\n            </div>);\n        }     \n        else{\n         return<p>ridrect to user dashboard </p>\n        }\n      }////\n\n      if(isAuthenticated()){\n        return <Redirect to=\"/\" />;\n      }\n     };\n\n\n\n  \n   //popup messsage\n  \n   const loadingMessage = () => {\n    return(\n          loading &&(\n                <div className = \"alert alert-info\">\n                  <h2>Loading...</h2>\n                </div>\n          )\n      );\n  \n  };\n  \n  \n  const errorMessage = () => {\n  return(\n\n    <div className=\"row\">\n   <div className=\"col-md-6 offset-sm-3 text-left\">\n  <div className = \"alert alert-danger\"\n    style={{display:error ? \"\": \"none\"}}>\n       {error} !!\n    </div>\n    \n    </div>\n    </div>\n    );\n  \n  };\n  \n  \n  \n  return(\n  \n    <div>\n         <NavBar />\n\n      <div className=\"container\">\n        <div className=\"jumbotron bg-white text-dark text-center\">\n          <h2 className=\"display-4\">Signin Here</h2>\n          <p className=\"lead\">Welcome back ...</p>\n          \n         <div class=\"container\">\n\n          {/* here is form code */}\n\n\n          <div class=\"row\">\n    <form class=\"col s12\">\n      \n      \n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input onChange={handleChanges(\"email\")}  value = {email} id=\"email\" type=\"email\" class=\"validate\"/>\n          <label for=\"email\" class=\"blue-text \">Email</label>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input onChange={handleChanges(\"password\")} value={password} id=\"password\" type=\"password\" class=\"validate\"/>\n          <label for=\"password\" class=\"blue-text\">Password</label>\n        </div>\n      </div>\n\n      {loadingMessage()}\n      {errorMessage()}\n\n      <div class=\"row\">\n        <div class=\"col s12\">\n        <button onClick = {onSubmit} class=\"btn blue waves-effect waves-light btn-large\" type=\"submit\" name=\"action\">Submit\n    <i class=\"material-icons right\">send</i>\n  </button>\n        \n        </div>\n      </div>\n  <p className=\"text-black text-center\">{JSON.stringify(values)}</p>\n    </form>\n  </div>\n\n         </div>\n        \n        \n        </div >\n       \n      </div>\n     \n    </div>\n  )};\n  \n  export default Signin;\n  \n  \n\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/UserDashBoard.js",["89"],"import React from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport { NavBar } from \"../core/NavBar\";\n//import Menu from \"./Menu\";\n\nexport default function UserDashBoard() {\n\n  return (\n    <div>\n    <NavBar />\n    <div className=\"container\">\n      <div className=\"jumbotron bg-white text-dark text-center\">\n        <h2 className=\"display-4\">User Dashboard</h2>\n        <p className=\"lead\">Hello user </p>\n        \n      </div>\n     \n    </div>\n   \n  </div>\n  );\n}\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/AdminDashBoard.js",["90"],"import React from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport { NavBar } from \"../core/NavBar\";\n//import Menu from \"./Menu\";\n\nexport default function AdminDashBoard() {\n\n  return (\n    <div>\n    <NavBar />\n    <div className=\"container\">\n      <div className=\"jumbotron bg-white text-dark text-center\">\n        <h2 className=\"display-4\">admin Dashboard</h2>\n        <p className=\"lead\">Hello admin </p>\n        \n      </div>\n     \n    </div>\n   \n  </div>\n  );\n}\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/auth/helper/index.js",[],["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":17},{"ruleId":"97","severity":1,"message":"101","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":3,"column":16,"nodeType":"99","messageId":"100","endLine":3,"endColumn":26},{"ruleId":"97","severity":1,"message":"104","line":13,"column":12,"nodeType":"99","messageId":"100","endLine":13,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":21,"column":8,"nodeType":"107","endLine":21,"endColumn":82},{"ruleId":"105","severity":1,"message":"106","line":24,"column":10,"nodeType":"107","endLine":24,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":50,"column":12,"nodeType":"107","endLine":50,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":51,"column":12,"nodeType":"107","endLine":51,"endColumn":24},{"ruleId":"97","severity":1,"message":"108","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":15},{"ruleId":"97","severity":1,"message":"109","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"110","line":28,"column":13,"nodeType":"99","messageId":"100","endLine":28,"endColumn":22},{"ruleId":"97","severity":1,"message":"111","line":28,"column":38,"nodeType":"99","messageId":"100","endLine":28,"endColumn":42},{"ruleId":"97","severity":1,"message":"112","line":28,"column":43,"nodeType":"99","messageId":"100","endLine":28,"endColumn":50},{"ruleId":"97","severity":1,"message":"113","line":28,"column":51,"nodeType":"99","messageId":"100","endLine":28,"endColumn":59},{"ruleId":"97","severity":1,"message":"114","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"114","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"93","replacedBy":"115"},{"ruleId":"95","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'instances' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'event' is defined but never used.","'data' is defined but never used.","'user_name' is assigned a value but never used.","'role' is assigned a value but never used.","'service' is assigned a value but never used.","'verified' is assigned a value but never used.","'API' is defined but never used.",["117"],["118"],"no-global-assign","no-unsafe-negation"]