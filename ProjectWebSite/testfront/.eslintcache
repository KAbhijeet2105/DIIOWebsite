[{"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/index.js":"1","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/App.js":"2","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/Routes.js":"3","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Home.js":"4","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/backend.js":"5","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Base.js":"6","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Menu.js":"7","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/views/Dashboard.js":"8","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/variables/charts.js":"9","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/NavBar.js":"10","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signup.js":"11","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signin.js":"12","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/UserDashBoard.js":"13","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/AdminDashBoard.js":"14","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/auth/helper/index.js":"15","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Profile.js":"16","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/admin/CreateProfile.js":"17","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/admin/ManageProfile.js":"18","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/admin/helper/adminapicall.js":"19"},{"size":210,"mtime":1610514644256,"results":"20","hashOfConfig":"21"},{"size":528,"mtime":1610345318168,"results":"22","hashOfConfig":"23"},{"size":1634,"mtime":1615615091946,"results":"24","hashOfConfig":"21"},{"size":684,"mtime":1614748997028,"results":"25","hashOfConfig":"21"},{"size":50,"mtime":1581794767000,"results":"26","hashOfConfig":"21"},{"size":378,"mtime":1610466395619,"results":"27","hashOfConfig":"21"},{"size":1869,"mtime":1610599876590,"results":"28","hashOfConfig":"21"},{"size":17822,"mtime":1610466614892,"results":"29","hashOfConfig":"21"},{"size":10910,"mtime":1607696334000,"results":"30","hashOfConfig":"21"},{"size":3189,"mtime":1615100359001,"results":"31","hashOfConfig":"21"},{"size":4111,"mtime":1615969866148,"results":"32","hashOfConfig":"21"},{"size":3985,"mtime":1615701911903,"results":"33","hashOfConfig":"21"},{"size":489,"mtime":1613914752259,"results":"34","hashOfConfig":"21"},{"size":3757,"mtime":1616310254448,"results":"35","hashOfConfig":"21"},{"size":1620,"mtime":1615469363921,"results":"36","hashOfConfig":"21"},{"size":1071,"mtime":1615615138727,"results":"37","hashOfConfig":"21"},{"size":9851,"mtime":1616595059767,"results":"38","hashOfConfig":"21"},{"size":852,"mtime":1615615160243,"results":"39","hashOfConfig":"21"},{"size":2097,"mtime":1616570168746,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"58anjr",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eb6vlm",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"43"},"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/index.js",[],["90","91"],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/App.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/Routes.js",["92"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Base from \"./core/Base\";\nimport Home from \"./core/Home\";\nimport Dashboard from \"../src/views/Dashboard\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport UserDashBoard from \"./user/UserDashBoard\";\nimport AdminDashBoard from \"./user/AdminDashBoard\";\nimport UserProfile from \"./user/Profile\";\nimport CreateProfile from \"./admin/CreateProfile\";\n\nimport ManageProfile from './admin/ManageProfile';\n\n\n//import Dashboard from \"../views/Dashboard.js\";\n// import Icons from \"views/Icons.js\";\n// import Map from \"views/Map.js\";\n// import Notifications from \"views/Notifications.js\";\n// import Rtl from \"views/Rtl.js\";\n// import TableList from \"views/TableList.js\";\n// import Typography from \"views/Typography.js\";\n// import UserProfile from \"views/UserProfile.js\";\n\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/base\" exact component={Base} />\n        <Route path=\"/user/signup\" exact component={Signup} />\n        <Route path=\"/user/signin\" exact component={Signin} />\n        <Route path=\"/admin/dashboard\" exact component={AdminDashBoard} />\n        <Route path=\"/user/dashboard\" exact component={UserDashBoard} />\n        <Route path=\"/user/profile\" exact component={UserProfile} />\n        <Route path=\"/user/createprofile\" exact component={CreateProfile} />\n        <Route path=\"/user/manageprofile\" exact component={ManageProfile} />\n        \n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Home.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/backend.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Base.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/Menu.js",["93"],"import React from \"react\";\nimport { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\n\nconst currentTab = (history, path) => {\n  if (history.location.pathname === path) {\n    return { color: \"#12B0E8\" };\n  } else {\n    return { color: \"#FFFFFF\" };\n  }\n};\n\nconst Menu = ({ history }) => (\n  <div>\n    <ul className=\"nav nav-tabs bg-dark\">\n      <li className=\"nav-item\">\n        <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\n          Home\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/base\")}\n          className=\"nav-link\"\n          to=\"/base\"\n        >\n          Base\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/user/dashboard\")}\n          className=\"nav-link\"\n          to=\"/user/dashboard\"\n        >\n          Dashboard\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/admin/dashboard\")}\n          className=\"nav-link\"\n          to=\"/admin/dashboard\"\n        >\n          A. Dashboard\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signup\")}\n          className=\"nav-link\"\n          to=\"/signup\"\n        >\n          Signup\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signin\")}\n          className=\"nav-link\"\n          to=\"/signin\"\n        >\n          Sign In\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          style={currentTab(history, \"/signout\")}\n          className=\"nav-link\"\n          to=\"/signout\"\n        >\n          Signout\n        </Link>\n      </li>\n    </ul>\n  </div>\n);\n\n//new try.................\n\n\nexport default withRouter(Menu);\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/views/Dashboard.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/variables/charts.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/core/NavBar.js",["94","95","96","97","98","99"],"import React from \"react\";\nimport { Component } from \"react\";\nimport { Link, NavLink, Redirect, withRouter } from \"react-router-dom\";\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { signout, isAuthenticated } from \"../auth/helper\";\n\nexport class NavBar extends Component{\n\n    componentDidMount(){\n      \n     document.addEventListener('DOMContentLoaded', function() {\n       var elems = document.querySelectorAll('.sidenav');\n       var instances = M.Sidenav.init(elems, {});\n     });\n    }\n\n\n\n     performLogout = () => {\n     \n        signout(()=>{})\n        return  <Redirect to=\"/\" />;\n        \n    \n    };\n\n\n\n    render(){\n      return(\n     <div>\n      <nav>\n       <div class=\"nav-wrapper blue\">\n       <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger show-on-large\"><i class=\"material-icons\">menu</i></a>\n   \n         <div class=\"container\">\n         <a href=\"#\" class=\"brand-logo\">Logo</a>\n         <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n           {/* <li><a href=\"sass.html\">Sass</a></li>\n           <li><a href=\"badges.html\">Components</a></li>\n           <li><a href=\"collapsible.html\">JavaScript</a></li> */}\n         </ul>\n         </div>\n       </div>\n     </nav>\n     \n     <ul id=\"slide-out\" class=\"sidenav\">\n       <li><div class=\"user-view\">\n         <div class=\"background\">\n           {/* <img src=\"images/office.jpg\"/> */}\n         </div>\n         {/* <a href=\"#user\"><img class=\"circle\" src=\"images/yuna.jpg\"/></a>\n         <a href=\"#name\"><span class=\"white-text name\">User name here.</span></a>\n         <a href=\"#email\"><span class=\"white-text email\">useremail@gmail.com</span></a> */}\n       </div></li>\n       {/* <li><a href=\"#!\"><i class=\"material-icons\">cloud</i>First Link With Icon</a></li> */}\n       <li><a href=\"/\">Home</a></li>\n       <li><div class=\"divider\"></div></li>\n       {/* <li><a class=\"subheader\">Subheader</a></li> */}\n       {/* <li><a class=\"waves-effect\" href=\"#!\">Third Link With Waves</a></li> */}\n       <li><a href=\"/admin/dashboard\">Dashboard</a></li>\n       {/* <li><a href=\"/user/dashboard\">User Dashboard</a></li> */}\n       {/* <li><a href=\"#\">Create Digital NoteCard</a></li> */}\n       {/* <li><a href=\"#\">View Digital NoteCard</a></li> */}\n\n      {/* signout here  */}\n\n\n       {/* new logout  method */}\n\n         <li class=\"logout_op\">\n           {isAuthenticated()&&\n           \n           (\n            <React.Fragment>\n            <a href=\"/\">\n               <span\n             className = \"text-warning\"\n             onClick = {() => {\n              signout(()=>{})\n            }}\n             >\n              Logout\n             </span>\n             </a>\n            </React.Fragment>\n           )}\n\n         </li>\n     \n\n\n\n{/* old logout method  */}\n        {/* {isAuthenticated() && (\n           <li class=\"logout_op\">\n             <a href=\"/\">\n             <span\n             className = \"text-warning\"\n              onClick = {() => {\n                signout(()=>{})\n              }}\n             >\n              Logout\n             </span>\n             </a>\n           </li>\n        )\n        } */}\n        \n        \n        \n         </ul> </div>); \n      };\n};\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signup.js",["100","101"],"import React, { useState }from \"react\";\nimport \"../styles.css\";\nimport {Link ,Redirect} from \"react-router-dom\";\nimport { event } from \"jquery\";\nimport { signup } from \"../auth/helper\";\nimport { NavBar } from \"../core/NavBar\";\n\n\n\nconst Signup = () => \n{\n  //for account \n  const [values,setValues] = useState({\n\n   user_name:\"\",\n   email:\"\",\n   password:\"\",\n   role:\"admin\",\n   service:\"profile\",\n   verified:false,\n   error:\"\",\n   success: false\n  });\n\n\n  \n//account\n  const {user_name,email,password,role,service,verified,error,success} = values;\n\n\n\n  const handleChanges = user_name => event => {\n      setValues({...values,error:false,[user_name]:event.target.value});\n  };\n\n  const onSubmit = event =>  {\n\n    event.preventDefault()\n    setValues({...values, error:false})\n    signup({user_name,email,password,role,service,verified})\n    .then(data => {\n      if(data.error){\n        setValues({...values,error:data.error,success:false});\n      }\n      else{\n         setValues({...values,\n          user_name:\"\",\n          email:\"\",\n          password:\"\",\n          role:\"admin\",\n          service:\"profile\",\n          verified:false,\n          error:\"\",\n          success: true\n        \n        });\n\n      }\n    })\n    .catch(console.log(\"Error in signup!!!\"));\n\n  }\n\n\n //popup messsage\n\n const successMessage = () => {\n\n    return(\n      <div className=\"row\">\n      <div className=\"col-md-6 offset-sm-3 text-left\">\n  <div className = \"alert alert-success\"\n    style={{display:success ? performRedirectOnsignup() : \"none\"}}>\n    {/* <Redirect to=\"/admin/dashboard\" />; */}\n      New account created successfully!!please login here \n      {/* <Link to=\"/user/Signin\"> Please login here </Link> !! */}\n    </div>\n    </div>\n    </div>);\n\n };\n\nconst performRedirectOnsignup = () => {\n\n  //alert(\"New account created successfully!\")\n   return <Redirect to=\"/user/signin\" />; \n\n};\n\n\n\n const errorMessage = () => {\n  return(\n    <div className=\"row\">\n   <div className=\"col-md-6 offset-sm-3 text-left\">\n  <div className = \"alert alert-danger\"\n    style={{display:error ? \"\": \"none\"}}>\n       {error} !!\n    </div>\n    \n    </div>\n    </div>\n    );\n\n };\n\n\n\nreturn(\n\n    <div>\n         <NavBar />\n\n      <div className=\"container\">\n        <div className=\"jumbotron bg-white text-dark text-center\">\n          <h2 className=\"display-4\">Digital Profile Signup Page</h2>\n          <p className=\"lead\">Register here</p>\n          \n         <div class=\"container\">\n\n          {/* here is form code */}\n\n          <div class=\"row\">\n    <form class=\"col s12\">\n      <div class=\"row\">\n        <div class=\"input-field blue-text col s6\">\n          <input \n             value={user_name}\n          onChange={handleChanges(\"user_name\")}\n          id=\"name\" type=\"text\" class=\"validate blue-accent\"/>\n          <label for=\"name\" class=\"blue-text \">Name</label>\n        </div>\n       \n      </div>\n      \n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input\n              value={email}\n              onChange={handleChanges(\"email\")}\n          id=\"email\" type=\"email\" class=\"validate\"/>\n          <label for=\"email\" class=\"blue-text \">Email</label>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input id=\"password\" \n            onChange={handleChanges(\"password\")}\n            value={password}\n          type=\"password\" class=\"validate\"/>\n          <label for=\"password\" class=\"blue-text\">Password</label>\n        </div>\n      </div>\n      \n     \n\n      {successMessage()}\n      {errorMessage()}\n      {performRedirectOnsignup()}\n\n\n         <div class=\"row\">\n          <div class=\"col s12\">\n           <button onClick={onSubmit} class=\"btn blue waves-effect waves-light btn-large\" type=\"submit\" name=\"action\">Register\n           <i class=\"material-icons right\">send</i>\n            </button>\n          \n        </div>\n      </div>\n      <p className=\"text-black text-center\">{JSON.stringify(values)}</p>\n\n    </form>\n  </div>\n\n         </div>\n        \n        </div >\n       \n      </div>\n     \n    </div>\n  )};\n  export default Signup;","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Signin.js",["102","103","104","105","106","107","108"],"import React, { useState }from \"react\";\nimport \"../styles.css\";\nimport {Link, Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper/index\";\nimport { data } from \"jquery\";\nimport { NavBar } from \"../core/NavBar\";\n\n\n\nconst Signin = () => {\n\n\n    const [values,setValues] = useState({\n  \n      user_name:\"\",\n      email:\"\",\n      password:\"\",\n      role:\"admin\",\n      service:\"profile\",\n      verified:false,\n      error:\"\",\n      loading:false,\n      didRedirect :  false,\n      success: false\n     });\n   \n     const {user_name,email,password,role,service,verified,error, loading,didRedirect,success} = values;\n  \n       const { user } = isAuthenticated();\n  \n       const handleChanges = user_name => event => {\n        setValues({...values,error:false,[user_name]:event.target.value});\n    };\n  \n    const onSubmit = event => {\n     event.preventDefault();\n     setValues({...values, error:false})\n\n     signin({email,password})\n     .then(data => {\n          if(data.error){\n            setValues({...values, error: data.error, loading: false})\n          }\n          else{\n            authenticate(data,() => {\n              setValues({\n                ...values,\n                didRedirect:true,\n              });\n            });\n            //performRedirect();\n            //TODO:perform redirect and test it!\n          }\n          //redirecting code new add test...\n\n     })\n     .catch(console.log(\"signin request failed!!\"))\n\n    };\n  \n\n     var performRedirect = () => {\n       if( didRedirect){\n        if(user && user.role === \"admin\" ){\n          alert(\"Login successful!\")\n          return <Redirect to=\"/admin/dashboard\" />;\n\n         \n        }     \n        else{\n          return <Redirect to=\"/\" />;\n        }\n      }\n\n      if(isAuthenticated()){\n        alert(\"Login successful!\")\n        return <Redirect to=\"/admin/dashboard\" />;\n      }\n     };\n\n\n\n  \n   //popup messsage\n  \n   const loadingMessage = () => {\n    return(\n          loading &&(\n                <div className = \"alert alert-info\">\n                  <h2>Loading...</h2>\n                </div>\n          )\n      );\n  \n  };\n  \n  \n  const errorMessage = () => {\n  return(\n\n    <div className=\"row\">\n   <div className=\"col-md-6 offset-sm-3 text-left\">\n  <div className = \"alert alert-danger\"\n    style={{display:error ? \"\": \"none\"}}>\n       {error} !!\n    </div>\n    \n    </div>\n    </div>\n    );\n  \n  };\n  \n  return(\n  \n    <div>\n         <NavBar />\n\n      <div className=\"container\">\n        <div className=\"jumbotron bg-white text-dark text-center\">\n          <h2 className=\"display-4\">Digital Profile Login Page </h2>\n          <p className=\"lead\">Welcome back User...</p>\n          \n         <div class=\"container\">\n\n          {/* here is form code */}\n\n\n          <div class=\"row\">\n    <form class=\"col s12\">\n      \n      \n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input onChange={handleChanges(\"email\")}  value = {email} id=\"email\" type=\"email\" class=\"validate\"/>\n          <label for=\"email\" class=\"blue-text \">Email</label>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input onChange={handleChanges(\"password\")} value={password} id=\"password\" type=\"password\" class=\"validate\"/>\n          <label for=\"password\" class=\"blue-text\">Password</label>\n        </div>\n      </div>\n\n      {loadingMessage()}\n      {errorMessage()}\n      {  performRedirect()}\n\n      <div class=\"row\">\n        <div class=\"col s12\">\n        <button onClick = {onSubmit} class=\"btn blue waves-effect waves-light btn-large\" type=\"submit\" name=\"action\">Submit\n    <i class=\"material-icons right\">send</i>\n  </button>\n        \n        </div>\n      </div>\n  <p className=\"text-black text-center\">{JSON.stringify(values)}</p>\n    </form>\n  </div>\n\n         </div>\n        \n        \n        </div >\n       \n      </div>\n     \n    </div>\n  )};\n  \n  export default Signin;\n  \n  \n\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/UserDashBoard.js",["109"],"import React from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport { NavBar } from \"../core/NavBar\";\n//import Menu from \"./Menu\";\n\nexport default function UserDashBoard() {\n\n  return (\n    <div>\n    <NavBar />\n    <div className=\"container\">\n      <div className=\"jumbotron bg-white text-dark text-center\">\n        <h2 className=\"display-4\">User Dashboard</h2>\n        <p className=\"lead\">Hello user </p>\n        \n      </div>\n     \n    </div>\n   \n  </div>\n  );\n}\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/AdminDashBoard.js",["110","111"],"import React from \"react\";\nimport \"../styles.css\";\nimport { NavBar } from \"../core/NavBar\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { getAllProfiles } from \"../admin/helper/adminapicall\";\n//import Menu from \"./Menu\";\n\nexport default function AdminDashBoard() {\n\n  const {\n     user:{ user_name,email,role}\n  } = isAuthenticated();\n\n  // const {\n  //   profile: {\n  //       name,\n  //        uemail,\n  //        whatsAppNumber,\n  //        mobileNumber,\n  //        address,\n  //        location,\n  //         IG:,\n  //        FB,\n  //         YT,\n  //         LI,\n  //        WEB\n  //      },\n\n  // } =get\n\n\n  console.log(getAllProfiles());\n\n  return (\n    \n\n    <div>\n     \n    <NavBar />\n\n    <div className=\"container bg-white\">\n      <div className=\"jumbotron bg-white text-dark center\">\n        <h2 className=\"display-4 \">Dashboard</h2>\n       \n\n        <div class=\"d-flex justify-content-center\">\n       <span className=\"badge badge-success text-white  \">Welcome: {user_name} </span> \n       \n       <br/><br/>\n       \n     \n       </div>\n\n       <div class=\"d-flex justify-content-center\">\n       \n       <span className=\"badge badge-success text-white \">Email: {email} </span> \n     \n       </div>\n\n        </div>\n\n        {/* dashboard data end here unaem and mail id */}\n\n\n        <div className=\"jumbotron bg-white text-dark text-center\">\n\n            {/* dash grid top cards */}\n\n              <div class=\"container card-group\">\n                    <div class=\"row\">\n                    <div class=\"col\">         \n                <div className=\"card border-primary \">\n               {/* <div className=\"card-header bg-transparent border-success\">Header</div> */}\n               <div className=\"card-body text-primary\">\n                <h6 className=\"card-title\">Profile Shared</h6>\n                   <h3>360</h3>\n                   </div>\n                      </div>\n                  {/*card span end here */}\n                        </div>\n                      <div class=\"col\">\n                       <div className=\"card border-success \">\n                  {/* <div className=\"card-header bg-transparent border-success\">Header</div> */}\n                <div className=\"card-body text-success\">\n                   <h6 className=\"card-title\">Profile Shared by other users </h6>\n                    <h4>360</h4>\n                       </div>\n                        </div>\n                  {/*card span end here */}\n\n                    </div>\n                    <div class=\"col\">\n                      <Link to= \"/user/profile\" style={{ textDecoration: 'none' }}>\n                  <div className=\"card border-warning \" >\n                  {/* <div className=\"card-header bg-transparent border-success\">Header</div> */}\n              <div className=\"card-body text-warning\">\n                  <h6 className=\"card-title\">My Profile</h6>\n                  <h3>{'>'}</h3>\n                     </div>\n                      </div>\n                  {/*card span end here */}\n                  </Link>\n                                    </div>\n                            </div>     \n                    </div>\n                  {/* dash grid end here */}\n\n\n                  {/* search bar */}\n\n<div class=\"container\">\n          \n            <form>\n                <input type=\"text\" id=\"filter\" placeholder=\"Search for...\"  />\n            </form>\n            {/* <div>\n                {onChange={this.handleInputChange}\n                    this.state.responseData.map((i) =>\n                        <p>{i.name}</p>\n                    )\n                }\n            </div> */}\n        </div>\n          </div>\n\n      </div>\n    </div> );\n}\n","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/auth/helper/index.js",[],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/user/Profile.js",["112","113","114","115"],"import React from \"react\";\nimport \"../styles.css\";\nimport { NavBar } from \"../core/NavBar\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { API } from \"../backend\";\n\n\n\n\n\nexport default function UserProfile() {\n\n    return(\n          <div>\n             <NavBar />\n           \n             <div className=\"container bg-white\">\n       <div className=\"jumbotron bg-white text-dark center\">\n         <h2 className=\"display-4 \">My Profile</h2>\n        \n         <div class=\"d-flex justify-content-left\">\n        \n        <a href=\"/user/createprofile\"><span className=\"badge badge-success text-white left\">Create Profile </span></a> \n        <br/><br/>        \n        </div>\n\n        <div class=\"d-flex justify-content-left\">\n        \n        <a href=\"/user/manageprofile\"><span className=\"badge badge-success text-white left\">Edit Profile </span></a> \n        <br/><br/>        \n        </div>\n \n      \n      \n        </div>\n \n         </div>\n \n\n \n       </div>\n\n\n\n        \n    );\n};","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/admin/CreateProfile.js",["116","117","118"],"/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/admin/ManageProfile.js",["119","120","121","122","123"],"import React from \"react\";\nimport \"../styles.css\";\nimport { NavBar } from \"../core/NavBar\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { API } from \"../backend\";\n\n\n\n\n\n\nexport default function ManageProfile() {\n\n    return(\n          <div>\n             <NavBar />\n           \n             <div className=\"container bg-white\">\n       <div className=\"jumbotron bg-white text-dark center\">\n         <h2 className=\"display-4 \">ManageProfile</h2>\n        \n         <div class=\"d-flex justify-content-center\">\n        \n        <a href=\"#\"><span className=\"badge badge-success text-white \">Edit/Update Profile </span></a> \n        <br/><br/>        \n        </div>\n\n        \n \n      \n      \n        </div>\n \n         </div>\n \n\n \n       </div>\n\n\n\n        \n    );\n};","/home/stark/DotFinalYearProject2020/WebSide/ProjectWebSite/testfront/src/admin/helper/adminapicall.js",["124"],"\nimport { API } from \"../../backend\"\n\n//profile calls \n//create profile\nexport const createProfile = (userId,token,profile) => {\n// error my occur here 1\n  console.log(profile,JSON.stringify(profile))\n    return (fetch(`${API}/profile/createProfile/${userId}`,{\n       \n        method:\"POST\",\n       \n        headers:{\n            Accept: 'application/json',\n            \"Content-Type\":\"application/json\",\n            Authorization:`Bearer ${token}`\n        },\n         body: JSON.stringify(profile)\n    }) .then(response => {\n            return response.json()\n    }).catch(err => console.log(err))\n    );}\n\n\n//get all profiles\n\nexport const getAllProfiles = async () => {\n\n    try {\n        const response = await fetch(`${API}/profiles`, {\n            method: \"GET\"\n        });\n        return await response.json();\n    } catch (err) {\n        return console.log(err);\n    }\n};\n\n//delete a profile \n\nexport const deleteProfile = async (profileId,userId,token) => {\n\n    try {\n        const response = await fetch(`${API}/profile/${profileId}/${userId}`, {\n            method: \"DELETE\",\n            headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n        });\n        return await response.json();\n    } catch (err) {\n        return console.log(err);\n    }\n};\n\n\n// get profile \n\nexport const getProfile = async profileId => {\n\n    try {\n        const response = await fetch(`${API}/profile/${profileId}`, {\n            method: \"GET\"\n        });\n        return await response.json();\n    } catch (err) {\n        return console.log(err);\n    }\n};\n \n//update profile \n\n\nexport const updateProfile = async (profileId,userId,token,profile) => {\n\n    try {\n        const response = await fetch(`${API}/profile/${profileId}/${userId}`, {\n            method: \"PUT\",\n            headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: profile\n        });\n        return await response.json();\n    } catch (err) {\n        return console.log(err);\n    }\n};",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":17},{"ruleId":"129","severity":1,"message":"133","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":19},{"ruleId":"129","severity":1,"message":"134","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":3,"column":16,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"129","severity":1,"message":"136","line":3,"column":35,"nodeType":"131","messageId":"132","endLine":3,"endColumn":45},{"ruleId":"129","severity":1,"message":"137","line":13,"column":12,"nodeType":"131","messageId":"132","endLine":13,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":34,"column":8,"nodeType":"140","endLine":34,"endColumn":82},{"ruleId":"138","severity":1,"message":"139","line":37,"column":10,"nodeType":"140","endLine":37,"endColumn":41},{"ruleId":"129","severity":1,"message":"134","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"141","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":15},{"ruleId":"129","severity":1,"message":"134","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"142","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":14},{"ruleId":"129","severity":1,"message":"143","line":28,"column":13,"nodeType":"131","messageId":"132","endLine":28,"endColumn":22},{"ruleId":"129","severity":1,"message":"144","line":28,"column":38,"nodeType":"131","messageId":"132","endLine":28,"endColumn":42},{"ruleId":"129","severity":1,"message":"145","line":28,"column":43,"nodeType":"131","messageId":"132","endLine":28,"endColumn":50},{"ruleId":"129","severity":1,"message":"146","line":28,"column":51,"nodeType":"131","messageId":"132","endLine":28,"endColumn":59},{"ruleId":"129","severity":1,"message":"147","line":28,"column":87,"nodeType":"131","messageId":"132","endLine":28,"endColumn":94},{"ruleId":"129","severity":1,"message":"148","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"149","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"144","line":13,"column":29,"nodeType":"131","messageId":"132","endLine":13,"endColumn":33},{"ruleId":"129","severity":1,"message":"149","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"134","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":14},{"ruleId":"129","severity":1,"message":"150","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":25},{"ruleId":"129","severity":1,"message":"148","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":13},{"ruleId":"129","severity":1,"message":"151","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":19},{"ruleId":"129","severity":1,"message":"152","line":54,"column":117,"nodeType":"131","messageId":"132","endLine":54,"endColumn":131},{"ruleId":"129","severity":1,"message":"153","line":54,"column":132,"nodeType":"131","messageId":"132","endLine":54,"endColumn":144},{"ruleId":"129","severity":1,"message":"149","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"134","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":14},{"ruleId":"129","severity":1,"message":"150","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":25},{"ruleId":"129","severity":1,"message":"148","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":26,"column":9,"nodeType":"140","endLine":26,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":9,"column":13,"nodeType":"156","messageId":"157","endLine":19,"endColumn":13,"fix":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'instances' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'event' is defined but never used.","'data' is defined but never used.","'user_name' is assigned a value but never used.","'role' is assigned a value but never used.","'service' is assigned a value but never used.","'verified' is assigned a value but never used.","'success' is assigned a value but never used.","'API' is defined but never used.","'Redirect' is defined but never used.","'isAuthenticated' is defined but never used.","'useEffect' is defined but never used.","'createdProfile' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"161","text":"162"},"no-global-assign","no-unsafe-negation",[506,508],"."]